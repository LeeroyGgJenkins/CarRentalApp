@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <li class="nav-item nav-item-color px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-person" aria-hidden="true"></span> Hello, @context.User.Identity.Name!
            </NavLink>
        </li>
        <li class="nav-item nav-item-color px-3">
            <NavLink class="nav-link" href="authentification/logout" Match="NavLinkMatch.All">
                <span class="oi oi-account-logout" aria-hidden="true"></span> Log out
            </NavLink>
        </li>
       @* <a href="authentication/profile">Hello, @context.User.Identity.Name!</a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>*@
    </Authorized>
    <NotAuthorized>
        <li class="nav-item nav-item-color px-3">
            <NavLink class="nav-link" href="authentification/register" Match="NavLinkMatch.All">
                <span class="oi oi-signpost" aria-hidden="true"></span> Register
            </NavLink>
        </li>
        <li class="nav-item nav-item-color px-3">
            <NavLink class="nav-link" href="authentification/login" Match="NavLinkMatch.All">
                <span class="oi oi-account-login" aria-hidden="true"></span> Log In
            </NavLink>
        </li>
        @*<a href="authentication/register">Register</a>
        <a href="authentication/login">Log in</a>*@
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
